name: .NET Tests

on:
  push:
    branches:
      - main
      - groups
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: "1"
  DOTNET_NOLOGO: "1"
  DEBUG: ${{ vars.DEBUG }}

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        group: [ ContactFormValidation, ContactFormSubmission, CartCheckout ]

    steps:
      - name: Set PLAYWRIGHT_TRACE_PATH for all future steps
        run: echo "PLAYWRIGHT_TRACE_PATH=${{ github.workspace }}${{ vars.PLAYWRIGHT_TRACE_PATH }}" >> $GITHUB_ENV

      - name: Install PowerShell
        run: |
          sudo apt-get update
          sudo apt-get install -y wget apt-transport-https software-properties-common
          wget -q https://packages.microsoft.com/config/ubuntu/22.04/packages-microsoft-prod.deb
          sudo dpkg -i packages-microsoft-prod.deb
          sudo apt-get update
          sudo apt-get install -y powershell

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build

      - name: Install Playwright Browsers
        run: pwsh TechnicalAssessmentTests/bin/Debug/net9.0/playwright.ps1 install

      - name: Run Tests
        run: |
          make test-group Group=${{matrix.group}}
          
      - name: Upload Test Results Artifact
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ github.run_id }}-${{ github.run_attempt }}-${{ steps.timestamp.outputs.time }}
          path: TechnicalAssessmentTests/TestResults/

      - name: Any traces?
        run: |
          ls -la $PLAYWRIGHT_TRACE_PATH

      - name: Upload Playwright Traces
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-traces-${{ github.run_id }}-${{ github.run_attempt }}-${{ steps.timestamp.outputs.time }}
          path: .${{ vars.PLAYWRIGHT_TRACE_PATH }}/*.zip

  reporting:
    runs-on: ubuntu-latest
    needs: tests

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Test Results Artifact
        uses: actions/download-artifact@v4
        with:
          name: test-results
          path: TechnicalAssessmentTests/TestResults/

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Install ReportGenerator Tool
        run: |
          dotnet tool install -g dotnet-reportgenerator-globaltool
          export PATH="$PATH:$HOME/.dotnet/tools"
          dotnet tool restore

      - name: Generate HTML Report
        run: |
          export PATH="$PATH:$HOME/.dotnet/tools"
          make report

      - name: Upload HTML Report Artifact
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: test-report/
